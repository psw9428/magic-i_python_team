공학도를위한창의적컴퓨팅 과제#4용 코드 업데이트 로그

이 파일 내용은 굳이 안 봐도 돼요.




----------------------------------------------------------------------------------------------------
v0.5 - 2023-10-20 게시
과제를 출제하며 처음 공개한 버전입니다.



----------------------------------------------------------------------------------------------------
v0.5.1 - 2023-10-21 게시
중요한 내용
- 오류 수정> 0번째 설명서에 있던 표기 오류를 수정했습니다(파일 이름이 잘못 적혀 있었어요).



그냥 내용
- Core 개선> 게임 종료 후 공유 평면을 출력하는 Code의 성능을 살짝 높였습니다.

- 캐릭터 개선> hw4_ctrlable 캐릭터를 조금 더 편하게 조작해 볼 수 있도록 사용자 입력 처리 Code를 변경했습니다.
	> 이제 0글자 적고 엔터 쳐도 오류가 나지 않아요(무시해버림)

	> 이제 '계산하면 0 나오는 수식' 적고 엔터 쳐도 곧이곧대로 수집 행동을 선택한 것으로 간주하지 않아요(그냥 interactive에 적었을 때처럼 그 0을 출력해 줘요)
	  대놓고 0 엔터 치거나 ret_gather 엔터 쳤을 때는 정상적으로 수집 행동을 선택한 것으로 간주해요

	> 이동 또는 워프 행동을 선택할 때 이동할 방향, 워프할 칸 좌표를 지정하지 않았다면 주의 메시지를 출력하도록 만들었어요.
	  반대로, 이제 0 0 엔터 치면 (수집 의사 결정은 값 하나만 지정하면 되기 때문에) 의사 결정으로 간주하지 않고
	  그냥 일반 Python 문장을 적었다고 여기고 실행을 시도해요 (그리고 SyntaxError가 뜨게 될 거예요)

	> 아무튼 아직 손에 착착 감길 정도로 편하지는 않으니, 내 캐릭터 모듈 만들기 전에 살짝 맛만 본다는 느낌으로 사용해 주세요


- 변경> 이제 게임 종료 이후 점수 또는 각 평면을 파일에 저장할 것인지 여부를 Settings 모듈을 통해 지정할 수 있습니다.
	> 이름 export_result 및 export_planes에 False를 담아 두면 각 파일을 만들지 않아요


- 새로운 기능> 이제 몇몇 시나리오의 경우, 게임 종료 이후에 그 결과를 요약한 내용을 interactive에 출력해 줍니다.
	> Settings 모듈의 이름 print_summarized_result에 False를 담아 두면 출력하지 않아요

	> 주의: 출력할 때, 각 캐릭터들에게는 알려주지 않고 Core만 다루고 있는 Data도 섞어서 출력해 줘요.
			따라서, 결과 출력 내용에 적혀 있다 해도 내 캐릭터의 의사 결정 도중에 그 Data를 사용할 수는 없을 수도 있어요



안 봐도 되는 내용
- 새로운 기능> Core 코드의 오류를 찾는 용도로 강사 혼자 사용하기 위한 mode -1을 추가했습니다.
	> mode 값을 -1로 지정했을 때의 게임 양상은 매 업데이트마다 요상하게 변경되거나, 아예 오류가 떠 버리거나 할 수 있어요



----------------------------------------------------------------------------------------------------
v0.5.2 - 2023-10-22 게시
중요한 내용
- 규칙 변경> 이제 점유 완료된 칸에서 이동, 워프할 때 받는 후딜레이 감소 효과가 기력이 부족한 상태로 행동할 때도 적용됩니다.
			 추가로, 이제는 점유가 완료되어 있기만 해도 0.75배의 후딜레이 감소 효과가 적용됩니다.
	> 이 버전을 게시하는 시점에는 소개가 안 되어 있기는 한데, 점유 완료 이후에도 동일한 칸에 대해 '초과 점유'를 할 수 있고, 그 양에 따라 후딜레이 감소 효과가 더 늘어나요

	> 튜토리얼 시나리오#2를 종료했을 때 내 캐릭터가 점유로 인한 후딜레이 감소 효과를 얼마나 받았는지 확인할 수 있어요

- 점수 집계 항목 추가> 각 행동별 실제로 적용받은 후딜레이 합, 그리고 점유 완료한 칸에서 이동, 워프한 횟수와 이를 통해 절약한 후딜레이 합을 집계합니다.
	> 두 가지 후딜레이 감소 효과(점유로 인한 것과 민첩성 능력치로 인한 것)는 소위 '곱연산'으로 적용되다 보니
	  점유로 인한 후딜레이 감소는 작업자 스타일 캐릭터들보다는 수집가 스타일 캐릭터들에게 더 중요하다 말할 수 있어요


그냥 내용
- 튜토리얼 시나리오 개선> 몇 가지 튜토리얼 시나리오의 내용을 변경했습니다.
	> 시나리오#4 - 주변 칸들에 대해 임의의 양만큼 점유 기여도를 추가해 두고 시작해요.
	  텔레포터 위치와 칸별 점유 현황을 모두 감안하여 경로를 정하도록 구성하면 이전보다 빠르게 목적지 칸에 도착할 수 있을 거예요

	> 이제 시나리오#2, 시나리오#4가 종료된 이후에도 결과 요약 내용을 출력할 수 있어요

	> 그 외에 몇 가지 자잘한 부분들을 고쳐 두었어요
 


----------------------------------------------------------------------------------------------------
v0.5.3 - 2023-10-27 게시
중요한 내용
- hw4_ctrlable_light.py 추가
	> hw4_ctrlable 모듈은 과제를 처음 시작하는 친구들을 위해 온갖 정보들을 다 출력해 주고 있는데,
	  이 light 버전은 여러분이 좀 더 가벼운 느낌으로 이런 저런 테스트를 해 볼 수 있도록 만들었어요

	> 조작 방법 자체는 hw4_ctrlable 모듈과 동일해요

- Data 추가> 최근에 어떤 행동을 수행했는지 확인 가능한 infos.recent_action_me와 infos.recent_action_characters를 추가했습니다.
	> 모든 행동은 의사 결정 직후에 수행되므로,
	  어떤 다른 캐릭터가 최근에 수집 행동을 수행했다고 적혀 있다면 해당 캐릭터는 현재 그 행동에 대한 후딜레이를 겪는 중이라는 의미가 돼요


그냥 내용
- Data 추가> 내 캐릭터의 기력 회복량이 얼마나 되는지 확인 가능한 infos.coef_stamina_heal과 infos.coef_stamina_heal_on_base를 추가했습니다.

- 추가한 Data들을 hw4_ctrlable.py를 통해 플레이할 때도 구경해 볼 수 있도록 적절한 print() 호출식을 적어 두었습니다.


안 봐도 되는 내용
- 과제 제출 마감일을 일주일 연기했습니다. 이에 따라 0번째 설명서의 내용을 살짝 수정했습니다.
 


----------------------------------------------------------------------------------------------------
v0.5.4 - 2023-11-06 게시
중요한 내용
- 튜토리얼 시나리오#1, 2, 3에 대한 예시 캐릭터 모듈들을 추가했습니다.
	> hw4_settings.py에서 add_yeshi_characters_forScenario 값을 True로 지정해 두면 게임에 추가할 수 있어요
	> 예시 캐릭터들은 의사 결정 도중 아무 메시지도 출력하지 않아요.
	  각 캐릭터가 어떤 행동들을 하고 있는지 확인해 보고 싶다면 직접 .py 파일 중간중간에 print() 호출식을 적거나,
	  아니면 hw4_settings.py에서 해당 캐릭터 모듈을 focal_character로 지정하거나, print_log_for_all_characters 값을 True로 지정해 봐요

그냥 내용
- 규칙 변경> 수납 행동의 후딜레이와 관련한 규칙을 변경했습니다.
	> 이제 능력치와 무관하게 0.5초 걸려요(기력 부족시 1.5초)
	
	> 이전 버전까지는 후딜레이가 민첩성 능력치에 따라 추가로 감소했었어요.
	  수납 행동은 수집가 캐릭터들이 주로 고른다는 점을 감안해서,
	  수집가 캐릭터들이 민첩성 능력치를 덜 고려해도 되도록(고려해도 큰 의미 없게 되도록) 고친 셈이에요

- 규칙 변경> 기력 최대량을 결정하는 수식을 변경했습니다.
	> 기존: 체력 능력치 * 5
	  변경: 체력 능력치 * 4

	> 기력 회복량은 기존과 동일하게, 현재 칸에 거점이 있는지 여부에 따라 기력 최대량 // 2 또는 기력 최대량 // 4로 적용돼요.
	  이전에는 체력 능력치가 4의 배수가 아니면 회복량 계산에서 손해를 보았는데, 이제는 능력치 값과 무관하게 손해가 나지 않아요

	> 아무튼 캐릭터의 기력 최대량이 이전 대비 20% 감소한 셈이니 효율적으로 작업을 수행할 수 있는 범위가 이전 대비 줄어든 셈이에요

- 편의성 추가> 이제 hw4_settings.py를 붙잡고 F5를 눌러도 게임을 실행해 볼 수 있습니다.
	> 예시 캐릭터들을 감상할 때 각종 설정들을 변경하고 그 자리에서 바로 F5 누르면 돼요

	> 주의: 게임 종료 이후에 각종 Data를 확인해 보고 싶은 경우에는 hw4_settings.py가 아닌 캐릭터 모듈을 붙잡고 F5를 눌러야 해요
		    (그 캐릭터 모듈의 이름 사전을 바탕으로 data와 infos를 구경해 볼 수 있어요)

